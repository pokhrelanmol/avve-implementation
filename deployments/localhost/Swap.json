{
  "address": "0x103A3b128991781EE2c8db0454cA99d67b257923",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "name": "swapExactInputSingle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x677cf8ff65d8669f47f46377aef4b078647e9f38a5bf65e64200ef1931ba1e8c",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x103A3b128991781EE2c8db0454cA99d67b257923",
    "transactionIndex": 0,
    "gasUsed": "569783",
    "logsBloom": "0x
    "blockHash": "0x37b37cefe99f2342894e892bf571b687a042afa7f36a9034ae51d0b0f02e5000",
    "transactionHash": "0x677cf8ff65d8669f47f46377aef4b078647e9f38a5bf65e64200ef1931ba1e8c",
    "logs": [],
    "blockNumber": 16011457,
    "cumulativeGasUsed": "569783",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d58af0ec6b1c60c2cd02e6b65a103a7d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"swapExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Swap.sol\":\"Swap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.6.0;\\n\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\n\\nlibrary TransferHelper {\\n    /// @notice Transfers tokens from the targeted address to the given destination\\n    /// @notice Errors with 'STF' if transfer fails\\n    /// @param token The contract address of the token to be transferred\\n    /// @param from The originating address from which the tokens will be transferred\\n    /// @param to The destination address of the transfer\\n    /// @param value The amount to be transferred\\n    function safeTransferFrom(\\n        address token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) =\\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\\n    }\\n\\n    /// @notice Transfers tokens from msg.sender to a recipient\\n    /// @dev Errors with ST if transfer fails\\n    /// @param token The contract address of the token which will be transferred\\n    /// @param to The recipient of the transfer\\n    /// @param value The value of the transfer\\n    function safeTransfer(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\\n    }\\n\\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\\n    /// @dev Errors with 'SA' if transfer fails\\n    /// @param token The contract address of the token to be approved\\n    /// @param to The target of the approval\\n    /// @param value The amount of the given token the target will be allowed to spend\\n    function safeApprove(\\n        address token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\\n    }\\n\\n    /// @notice Transfers ETH to the recipient address\\n    /// @dev Fails with `STE`\\n    /// @param to The destination of the transfer\\n    /// @param value The value to be transferred\\n    function safeTransferETH(address to, uint256 value) internal {\\n        (bool success, ) = to.call{value: value}(new bytes(0));\\n        require(success, 'STE');\\n    }\\n}\\n\",\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\"},\"contracts/Swap.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.11;\\nimport \\\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\\\";\\nimport \\\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\\\";\\n\\ncontract Swap {\\n    ISwapRouter constant swapRouter =\\n        ISwapRouter(0xE592427A0AEce92De3Edee1F18E0157C05861564);\\n    address constant DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F;\\n    address constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\\n\\n    function swapExactInputSingle(uint256 amountIn)\\n        external\\n        returns (uint256 amountOut)\\n    {\\n        TransferHelper.safeTransferFrom(\\n            WETH9,\\n            msg.sender,\\n            address(this),\\n            amountIn\\n        );\\n        TransferHelper.safeApprove(WETH9, address(swapRouter), amountIn);\\n\\n        ISwapRouter.ExactInputSingleParams memory params = ISwapRouter\\n            .ExactInputSingleParams({\\n                tokenIn: WETH9,\\n                tokenOut: DAI,\\n                fee: 3000,\\n                recipient: msg.sender,\\n                deadline: block.timestamp,\\n                amountIn: amountIn,\\n                amountOutMinimum: 0,\\n                sqrtPriceLimitX96: 0\\n            });\\n        amountOut = swapRouter.exactInputSingle(params);\\n    }\\n\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0xb11ff89bb687c623315e2e7a819d1d0edbc6d013ddb3a6b25eb9741434131888\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061095f806100206000396000f3fe6080604052600436106100225760003560e01c806373bd43ad1461002e57610029565b3661002957005b600080fd5b34801561003a57600080fd5b5061005560048036038101906100509190610507565b61006b565b6040516100629190610543565b60405180910390f35b600061008d73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc233308561021f565b6100c073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273e592427a0aece92de3edee1f18e0157c0586156484610377565b600060405180610100016040528073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168152602001736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815250905073e592427a0aece92de3edee1f18e0157c0586156473ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016101d4919061067d565b6020604051808303816000875af11580156101f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021791906106ae565b915050919050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b868686604051602401610256939291906106ea565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516102c0919061079b565b6000604051808303816000865af19150503d80600081146102fd576040519150601f19603f3d011682016040523d82523d6000602084013e610302565b606091505b5091509150818015610330575060008151148061032f57508080602001905181019061032e91906107ea565b5b5b61036f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036690610874565b60405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b85856040516024016103ac929190610894565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610416919061079b565b6000604051808303816000865af19150503d8060008114610453576040519150601f19603f3d011682016040523d82523d6000602084013e610458565b606091505b5091509150818015610486575060008151148061048557508080602001905181019061048491906107ea565b5b5b6104c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bc90610909565b60405180910390fd5b5050505050565b600080fd5b6000819050919050565b6104e4816104d1565b81146104ef57600080fd5b50565b600081359050610501816104db565b92915050565b60006020828403121561051d5761051c6104cc565b5b600061052b848285016104f2565b91505092915050565b61053d816104d1565b82525050565b60006020820190506105586000830184610534565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105898261055e565b9050919050565b6105998161057e565b82525050565b600062ffffff82169050919050565b6105b78161059f565b82525050565b6105c6816104d1565b82525050565b6105d58161055e565b82525050565b610100820160008201516105f26000850182610590565b5060208201516106056020850182610590565b50604082015161061860408501826105ae565b50606082015161062b6060850182610590565b50608082015161063e60808501826105bd565b5060a082015161065160a08501826105bd565b5060c082015161066460c08501826105bd565b5060e082015161067760e08501826105cc565b50505050565b60006101008201905061069360008301846105db565b92915050565b6000815190506106a8816104db565b92915050565b6000602082840312156106c4576106c36104cc565b5b60006106d284828501610699565b91505092915050565b6106e48161057e565b82525050565b60006060820190506106ff60008301866106db565b61070c60208301856106db565b6107196040830184610534565b949350505050565b600081519050919050565b600081905092915050565b60005b8381101561075557808201518184015260208101905061073a565b83811115610764576000848401525b50505050565b600061077582610721565b61077f818561072c565b935061078f818560208601610737565b80840191505092915050565b60006107a7828461076a565b915081905092915050565b60008115159050919050565b6107c7816107b2565b81146107d257600080fd5b50565b6000815190506107e4816107be565b92915050565b600060208284031215610800576107ff6104cc565b5b600061080e848285016107d5565b91505092915050565b600082825260208201905092915050565b7f5354460000000000000000000000000000000000000000000000000000000000600082015250565b600061085e600383610817565b915061086982610828565b602082019050919050565b6000602082019050818103600083015261088d81610851565b9050919050565b60006040820190506108a960008301856106db565b6108b66020830184610534565b9392505050565b7f5341000000000000000000000000000000000000000000000000000000000000600082015250565b60006108f3600283610817565b91506108fe826108bd565b602082019050919050565b60006020820190508181036000830152610922816108e6565b905091905056fea26469706673582212207d560dedabd676f39fb62f0f456b3c66d5f919a562de70075643c0420251cfce64736f6c634300080b0033",
  "deployedBytecode": "0x6080604052600436106100225760003560e01c806373bd43ad1461002e57610029565b3661002957005b600080fd5b34801561003a57600080fd5b5061005560048036038101906100509190610507565b61006b565b6040516100629190610543565b60405180910390f35b600061008d73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc233308561021f565b6100c073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273e592427a0aece92de3edee1f18e0157c0586156484610377565b600060405180610100016040528073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168152602001736b175474e89094c44da98b954eedeac495271d0f73ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815250905073e592427a0aece92de3edee1f18e0157c0586156473ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b81526004016101d4919061067d565b6020604051808303816000875af11580156101f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021791906106ae565b915050919050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b868686604051602401610256939291906106ea565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516102c0919061079b565b6000604051808303816000865af19150503d80600081146102fd576040519150601f19603f3d011682016040523d82523d6000602084013e610302565b606091505b5091509150818015610330575060008151148061032f57508080602001905181019061032e91906107ea565b5b5b61036f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036690610874565b60405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b85856040516024016103ac929190610894565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610416919061079b565b6000604051808303816000865af19150503d8060008114610453576040519150601f19603f3d011682016040523d82523d6000602084013e610458565b606091505b5091509150818015610486575060008151148061048557508080602001905181019061048491906107ea565b5b5b6104c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bc90610909565b60405180910390fd5b5050505050565b600080fd5b6000819050919050565b6104e4816104d1565b81146104ef57600080fd5b50565b600081359050610501816104db565b92915050565b60006020828403121561051d5761051c6104cc565b5b600061052b848285016104f2565b91505092915050565b61053d816104d1565b82525050565b60006020820190506105586000830184610534565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105898261055e565b9050919050565b6105998161057e565b82525050565b600062ffffff82169050919050565b6105b78161059f565b82525050565b6105c6816104d1565b82525050565b6105d58161055e565b82525050565b610100820160008201516105f26000850182610590565b5060208201516106056020850182610590565b50604082015161061860408501826105ae565b50606082015161062b6060850182610590565b50608082015161063e60808501826105bd565b5060a082015161065160a08501826105bd565b5060c082015161066460c08501826105bd565b5060e082015161067760e08501826105cc565b50505050565b60006101008201905061069360008301846105db565b92915050565b6000815190506106a8816104db565b92915050565b6000602082840312156106c4576106c36104cc565b5b60006106d284828501610699565b91505092915050565b6106e48161057e565b82525050565b60006060820190506106ff60008301866106db565b61070c60208301856106db565b6107196040830184610534565b949350505050565b600081519050919050565b600081905092915050565b60005b8381101561075557808201518184015260208101905061073a565b83811115610764576000848401525b50505050565b600061077582610721565b61077f818561072c565b935061078f818560208601610737565b80840191505092915050565b60006107a7828461076a565b915081905092915050565b60008115159050919050565b6107c7816107b2565b81146107d257600080fd5b50565b6000815190506107e4816107be565b92915050565b600060208284031215610800576107ff6104cc565b5b600061080e848285016107d5565b91505092915050565b600082825260208201905092915050565b7f5354460000000000000000000000000000000000000000000000000000000000600082015250565b600061085e600383610817565b915061086982610828565b602082019050919050565b6000602082019050818103600083015261088d81610851565b9050919050565b60006040820190506108a960008301856106db565b6108b66020830184610534565b9392505050565b7f5341000000000000000000000000000000000000000000000000000000000000600082015250565b60006108f3600283610817565b91506108fe826108bd565b602082019050919050565b60006020820190508181036000830152610922816108e6565b905091905056fea26469706673582212207d560dedabd676f39fb62f0f456b3c66d5f919a562de70075643c0420251cfce64736f6c634300080b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}